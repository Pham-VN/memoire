{"ast":null,"code":"var _jsxFileName = \"/home/clement/Desktop/Todo-App/src/components/TodoInput.js\",\n  _s = $RefreshSig$();\nimport Input from \"./FORM/Input.js\";\nimport Button from \"./FORM/Button.js\";\nimport { Fragment, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoInput = () => {\n  _s();\n  const [inputTask, setInputTask] = useState('');\n  const [list, setList] = useState([]);\n  console.log(\"list : \", list);\n  const [editing, setEditing] = useState(false);\n  const [currentEditingTodo, setCurrentEditingTodo] = useState(0);\n  const handleChangeInput = event => {\n    setInputTask(event.target.value);\n  };\n  const handleAddTodo = index => {\n    const newTask = {\n      id: Math.random() * 10,\n      todo: inputTask\n    };\n    setList([...list, newTask]);\n    setInputTask(''); // clear input fiel when user clicked button.\n  };\n\n  const handleDeleteTask = id => {\n    const newList = list.filter(todo => todo.id !== id);\n    setList(newList);\n  };\n  const handleEditing = id => {\n    setInputTask('');\n    setEditing(!editing);\n    const idCurrentindextoto = setCurrentEditingTodo(id);\n    console.log(\"currentEditingTodo après update: \", idCurrentindextoto);\n  };\n  const handleEditTodo = index => {\n    console.log(\"index dans la liste :\", index);\n    list[index].todo = inputTask;\n    console.log(\"list[index] : \", list[index]);\n    setInputTask('');\n    setEditing(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"My to do list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        placeholder: editing ? \"Edit Task\" : \"Add Task\",\n        value: inputTask,\n        onChange: handleChangeInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"button-btn\",\n        onClick: editing ? () => handleEditTodo(currentEditingTodo) : () => handleAddTodo(),\n        children: editing ? \"Edit Task\" : \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: list.map((todo, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"task\",\n          children: [todo.todo, /*#__PURE__*/_jsxDEV(Button, {\n            className: \"delete-button\",\n            onClick: () => handleDeleteTask(todo.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"edit-button\",\n            id: index,\n            onClick: () => handleEditing(index),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoInput, \"EtXfisARTbPG2QkWCduBaVWNlvY=\");\n_c = TodoInput;\nexport default TodoInput;\nvar _c;\n$RefreshReg$(_c, \"TodoInput\");","map":{"version":3,"names":["Input","Button","Fragment","useState","jsxDEV","_jsxDEV","TodoInput","_s","inputTask","setInputTask","list","setList","console","log","editing","setEditing","currentEditingTodo","setCurrentEditingTodo","handleChangeInput","event","target","value","handleAddTodo","index","newTask","id","Math","random","todo","handleDeleteTask","newList","filter","handleEditing","idCurrentindextoto","handleEditTodo","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","map","_c","$RefreshReg$"],"sources":["/home/clement/Desktop/Todo-App/src/components/TodoInput.js"],"sourcesContent":["import Input from \"./FORM/Input.js\"\nimport Button from \"./FORM/Button.js\"\nimport { Fragment, useState } from \"react\"\n\nconst TodoInput = () => {\n\n  const [inputTask, setInputTask] = useState('');\n  const [list,setList] = useState([])\n\n  console.log(\"list : \",list)\n \n  const [editing,setEditing] = useState(false)\n  const [currentEditingTodo, setCurrentEditingTodo] = useState(0);\n \n\n\n  const handleChangeInput = (event) => {\n    setInputTask(event.target.value)\n  }\n\n  const handleAddTodo = (index) => {\n    const newTask = {\n        id: Math.random() * 10,\n        todo: inputTask\n    };\n\n    setList([...list, newTask])    \n    setInputTask('') // clear input fiel when user clicked button.\n  } \n\n  const handleDeleteTask = (id) => {\n   \n    const newList = list.filter((todo) => todo.id !== id)\n    setList(newList)\n  }\n\n  const handleEditing = (id) => {\n    setInputTask('')\n    setEditing(!editing);\n    const idCurrentindextoto= setCurrentEditingTodo(id);\n\n    console.log(\"currentEditingTodo après update: \",idCurrentindextoto)\n\n  }\n\n  const handleEditTodo = (index) => {\n   \n    console.log(\"index dans la liste :\" , index)\n   \n    list[index].todo=inputTask;\n\n    console.log(\"list[index] : \", list[index])\n    setInputTask('') \n    setEditing(false);\n  } \n\n   \n  return (  \n    <Fragment>   \n      <div className=\"container\">\n        <h2>My to do list</h2>\n        <Input \n        type=\"text\"\n        placeholder= {editing ? \"Edit Task\" : \"Add Task\"}\n        value={inputTask}\n        onChange = {handleChangeInput}\n        ></Input>\n        <Button \n        className = \"button-btn\"\n        onClick = {editing ?  () => handleEditTodo(currentEditingTodo) : () => handleAddTodo()}\n\n        >{editing ? \"Edit Task\" : \"Add Task\"}</Button>\n\n              <ul>\n            {list.map((todo,index) => (\n                <li key={index} className=\"task\">{todo.todo}\n                <Button className=\"delete-button\" onClick={() => handleDeleteTask(todo.id)}>Delete</Button>\n                <Button className=\"edit-button\" id={index} onClick={() => handleEditing(index)}>Edit</Button>\n                \n                </li>\n            ))}\n        </ul>\n            </div>\n    </Fragment>\n\n  )\n}\nexport default TodoInput;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}