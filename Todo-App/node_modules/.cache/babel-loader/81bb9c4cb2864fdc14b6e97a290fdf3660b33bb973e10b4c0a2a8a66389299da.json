{"ast":null,"code":"var _jsxFileName = \"/home/clement/Desktop/REACTJS/exercice_composant/exercice-component/todoApp/todo-app/src/components/TodoInput.js\",\n  _s = $RefreshSig$();\nimport Input from \"./FORM/Input.js\";\nimport Button from \"./FORM/Button.js\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Todoinput() {\n  _s();\n  const [inputTask, setInputTask] = useState(\"\");\n\n  // Step 1: trigger an event when we type a task into the input box\n  const handleInputChange = event => {\n    setInputTask(event.target.value); // access the value of revent's target\n  };\n\n  // Step 2: \n  const [list, setList] = useState([]);\n  const handleAddToDo = () => {\n    setList([...list, inputTask]); // spread operator [...list] to create a new array with the existing taks in the list. Append the new Task to the end of the array\n    setInputTask(\"\"); // clear the input field when the user clisks the button\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"appToDo\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Add list to do you will do in the day\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"input-section\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        id: \"todoInput\",\n        type: \"text\",\n        placeholder: \"Add item...\",\n        value: inputTask,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        id: \"addBtn\"\n        // type=\"submit\"\n        ,\n        className: \"add\",\n        onClick: handleAddToDo,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n_s(Todoinput, \"cqxGvAuLkxOyZcqmOnEU1HRPRPo=\");\n_c = Todoinput;\nvar _c;\n$RefreshReg$(_c, \"Todoinput\");","map":{"version":3,"names":["Input","Button","useState","jsxDEV","_jsxDEV","Todoinput","_s","inputTask","setInputTask","handleInputChange","event","target","value","list","setList","handleAddToDo","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","type","placeholder","onChange","onClick","_c","$RefreshReg$"],"sources":["/home/clement/Desktop/REACTJS/exercice_composant/exercice-component/todoApp/todo-app/src/components/TodoInput.js"],"sourcesContent":["import Input from \"./FORM/Input.js\"\nimport Button from \"./FORM/Button.js\"\nimport { useState } from \"react\"\n\n\nexport default function Todoinput() {\n\n    const [inputTask, setInputTask] = useState(\"\")\n\n    // Step 1: trigger an event when we type a task into the input box\n    const handleInputChange = (event) => {\n        setInputTask(event.target.value) // access the value of revent's target\n    }\n\n    // Step 2: \n    const [list, setList] = useState([]);\n    \n    const handleAddToDo = () => {\n\n        setList([...list,inputTask]) // spread operator [...list] to create a new array with the existing taks in the list. Append the new Task to the end of the array\n         setInputTask(\"\") // clear the input field when the user clisks the button\n    }\n\n    return (\n        <div className=\"appToDo\">\n        <h1>Add list to do you will do in the day</h1>\n        <form className=\"input-section\">\n            <Input\n            id=\"todoInput\"\n            type=\"text\"\n            placeholder = \"Add item...\"\n            value={inputTask}\n            onChange={handleInputChange}\n            />\n\n            <Button \n            id=\"addBtn\"\n            // type=\"submit\"\n            className=\"add\"\n            onClick = {handleAddToDo}\n            >Add</Button>\n        </form>\n        <ul>\n            {/* {list.map((todo) => {\n                <li className=\"task\" key={todo.id}>\n                    \"test\"\n                </li>\n            })} */}\n            <li>Test</li>\n        </ul>\n        </div>\n    )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,iBAAiB;AACnC,OAAOC,MAAM,MAAM,kBAAkB;AACrC,SAASC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGhC,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAEhC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;;EAE9C;EACA,MAAMO,iBAAiB,GAAIC,KAAK,IAAK;IACjCF,YAAY,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,EAAC;EACrC,CAAC;;EAED;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMa,aAAa,GAAGA,CAAA,KAAM;IAExBD,OAAO,CAAC,CAAC,GAAGD,IAAI,EAACN,SAAS,CAAC,CAAC,EAAC;IAC5BC,YAAY,CAAC,EAAE,CAAC,EAAC;EACtB,CAAC;;EAED,oBACIJ,OAAA;IAAKY,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACxBb,OAAA;MAAAa,QAAA,EAAI;IAAqC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9CjB,OAAA;MAAMY,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC3Bb,OAAA,CAACJ,KAAK;QACNsB,EAAE,EAAC,WAAW;QACdC,IAAI,EAAC,MAAM;QACXC,WAAW,EAAG,aAAa;QAC3BZ,KAAK,EAAEL,SAAU;QACjBkB,QAAQ,EAAEhB;MAAkB;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B,CAAC,eAEFjB,OAAA,CAACH,MAAM;QACPqB,EAAE,EAAC;QACH;QAAA;QACAN,SAAS,EAAC,KAAK;QACfU,OAAO,EAAIX,aAAc;QAAAE,QAAA,EACxB;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC,eACPjB,OAAA;MAAAa,QAAA,eAMIb,OAAA;QAAAa,QAAA,EAAI;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAACf,EAAA,CA/CuBD,SAAS;AAAAsB,EAAA,GAATtB,SAAS;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}