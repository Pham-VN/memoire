{"ast":null,"code":"var _jsxFileName = \"/home/clement/Desktop/Todo-App/src/components/TodoInput.js\",\n  _s = $RefreshSig$();\nimport Input from \"./FORM/Input.js\";\nimport Button from \"./FORM/Button.js\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoInput = () => {\n  _s();\n  const [inputTask, setInputTask] = useState('');\n  const [list, setList] = useState([]);\n  console.log(\"list : \", list);\n  const handleChangeInput = event => {\n    setInputTask(event.target.value);\n  };\n  const handleAddTodo = () => {\n    const newTask = {\n      id: Math.floor(Math.random() * 10),\n      todo: inputTask\n    };\n    setList([...list, newTask]);\n    setInputTask(''); // clear input fiel when user clicked button.\n  };\n\n  const handleDeleteTask = () => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My to do list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      type: \"text\",\n      placeholder: \"Add item\",\n      value: inputTask,\n      onChange: handleChangeInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"button-btn\",\n      onClick: handleAddTodo,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: list.map((todo, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"task\",\n        children: [todo.todo, /*#__PURE__*/_jsxDEV(Button, {\n          className: \"delete-button\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoInput, \"4dbKlgSuLPNNMuQrBWrTrHTxmcs=\");\n_c = TodoInput;\nexport default TodoInput;\nvar _c;\n$RefreshReg$(_c, \"TodoInput\");","map":{"version":3,"names":["Input","Button","useState","jsxDEV","_jsxDEV","TodoInput","_s","inputTask","setInputTask","list","setList","console","log","handleChangeInput","event","target","value","handleAddTodo","newTask","id","Math","floor","random","todo","handleDeleteTask","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","map","index","_c","$RefreshReg$"],"sources":["/home/clement/Desktop/Todo-App/src/components/TodoInput.js"],"sourcesContent":["import Input from \"./FORM/Input.js\"\nimport Button from \"./FORM/Button.js\"\nimport { useState } from \"react\"\n\nconst TodoInput = () => {\n\n  const [inputTask, setInputTask] = useState('');\n  const [list,setList] = useState([])\n\n  console.log(\"list : \", list)\n  const handleChangeInput = (event) => {\n    setInputTask(event.target.value)\n  }\n\n  const handleAddTodo = () => {\n    const newTask = {\n        id: Math.floor(Math.random() * 10),\n        todo: inputTask\n    };\n\n    setList([...list, newTask])    \n    setInputTask('') // clear input fiel when user clicked button.\n  } \n\n  const handleDeleteTask = () => {\n\n  }\n  \n  return (\n    <div className=\"container\">\n        <h2>My to do list</h2>\n        <Input \n        type=\"text\"\n        placeholder=\"Add item\"\n        value={inputTask}\n        onChange = {handleChangeInput}\n        ></Input>\n        <Button \n        className = \"button-btn\"\n        onClick = {handleAddTodo}\n        >Add</Button>\n        <ul>\n            {list.map((todo,index) => (\n                <li key={index} className=\"task\">{todo.todo}\n                <Button className=\"delete-button\">Delete</Button>\n                </li>\n            ))}\n\n        </ul>\n    </div>\n  )\n}\nexport default TodoInput;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,iBAAiB;AACnC,OAAOC,MAAM,MAAM,kBAAkB;AACrC,SAASC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEtB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACO,IAAI,EAACC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEnCS,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEH,IAAI,CAAC;EAC5B,MAAMI,iBAAiB,GAAIC,KAAK,IAAK;IACnCN,YAAY,CAACM,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAClC,CAAC;EAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1B,MAAMC,OAAO,GAAG;MACZC,EAAE,EAAEC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC;MAClCC,IAAI,EAAEhB;IACV,CAAC;IAEDG,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAES,OAAO,CAAC,CAAC;IAC3BV,YAAY,CAAC,EAAE,CAAC,EAAC;EACnB,CAAC;;EAED,MAAMgB,gBAAgB,GAAGA,CAAA,KAAM,CAE/B,CAAC;EAED,oBACEpB,OAAA;IAAKqB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACtBtB,OAAA;MAAAsB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtB1B,OAAA,CAACJ,KAAK;MACN+B,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,UAAU;MACtBhB,KAAK,EAAET,SAAU;MACjB0B,QAAQ,EAAIpB;IAAkB;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC,eACT1B,OAAA,CAACH,MAAM;MACPwB,SAAS,EAAG,YAAY;MACxBS,OAAO,EAAIjB,aAAc;MAAAS,QAAA,EACxB;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACb1B,OAAA;MAAAsB,QAAA,EACKjB,IAAI,CAAC0B,GAAG,CAAC,CAACZ,IAAI,EAACa,KAAK,kBACjBhC,OAAA;QAAgBqB,SAAS,EAAC,MAAM;QAAAC,QAAA,GAAEH,IAAI,CAACA,IAAI,eAC3CnB,OAAA,CAACH,MAAM;UAACwB,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GADxCM,KAAK;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAAxB,EAAA,CA/CKD,SAAS;AAAAgC,EAAA,GAAThC,SAAS;AAgDf,eAAeA,SAAS;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}