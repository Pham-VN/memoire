{"ast":null,"code":"var _jsxFileName = \"/home/clement/Desktop/REACTJS/exercice_composant/exercice-component/todoApp/todo-app/src/components/TodoInput.js\",\n  _s = $RefreshSig$();\nimport Input from \"./FORM/Input.js\";\nimport Button from \"./FORM/Button.js\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Todoinput() {\n  _s();\n  const [inputTask, setInputTask] = useState(\"\");\n\n  // Step 2: \n  const [list, setList] = useState([]);\n  const handleAddToDo = () => {\n    const newTask = {\n      id: Math.random(),\n      todo: inputTask\n    };\n    setList([...list, newTask]); // spread operator [...list] to create a new array with the existing taks in the list. Append the new Task to the end of the array\n    setInputTask(\"\"); // clear the input field when the user clisks the button\n  };\n\n  // Step 1: trigger an event when we type a task into the input box\n  const handleInputChange = event => {\n    setInputTask(event.target.value); // access the value of revent's target\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"appToDo\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My To-Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"input-section\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        id: \"todoInput\",\n        type: \"text\",\n        placeholder: \"Add item...\",\n        value: inputTask,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        id: \"addBtn\"\n        // type=\"submit\"\n        ,\n        className: \"add\",\n        onClick: handleAddToDo,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: list.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"task\",\n        children: todo.todo\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_s(Todoinput, \"cqxGvAuLkxOyZcqmOnEU1HRPRPo=\");\n_c = Todoinput;\nvar _c;\n$RefreshReg$(_c, \"Todoinput\");","map":{"version":3,"names":["Input","Button","useState","jsxDEV","_jsxDEV","Todoinput","_s","inputTask","setInputTask","list","setList","handleAddToDo","newTask","id","Math","random","todo","handleInputChange","event","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","map","_c","$RefreshReg$"],"sources":["/home/clement/Desktop/REACTJS/exercice_composant/exercice-component/todoApp/todo-app/src/components/TodoInput.js"],"sourcesContent":["import Input from \"./FORM/Input.js\"\nimport Button from \"./FORM/Button.js\"\nimport { useState } from \"react\"\n\n\nexport default function Todoinput() {\n\n    const [inputTask, setInputTask] = useState(\"\");\n\n   \n    // Step 2: \n    const [list, setList] = useState([]);\n    \n    const handleAddToDo = () => {\n        const newTask = {\n            id: Math.random(),\n            todo: inputTask\n        };\n\n        setList([...list,newTask]) // spread operator [...list] to create a new array with the existing taks in the list. Append the new Task to the end of the array\n         setInputTask(\"\") // clear the input field when the user clisks the button\n    }\n\n     // Step 1: trigger an event when we type a task into the input box\n     const handleInputChange = (event) => {\n        setInputTask(event.target.value) // access the value of revent's target\n    }\n \n    return (\n        <div className=\"appToDo\">\n        <h1>My To-Do List</h1>\n        <form className=\"input-section\">\n            <Input\n            id=\"todoInput\"\n            type=\"text\"\n            placeholder = \"Add item...\"\n            value={inputTask}\n            onChange={handleInputChange}\n            />\n\n            <Button \n            id=\"addBtn\"\n            // type=\"submit\"\n            className=\"add\"\n            onClick = {handleAddToDo}\n            >Add</Button>\n        </form>\n        <ul>\n            {list.map((todo) => (\n                <li className=\"task\" key={todo.id}>\n                    {todo.todo}\n                </li>\n            ))}\n        </ul>\n        </div>\n    )\n}\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,iBAAiB;AACnC,OAAOC,MAAM,MAAM,kBAAkB;AACrC,SAASC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGhC,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAEhC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;;EAG9C;EACA,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMS,aAAa,GAAGA,CAAA,KAAM;IACxB,MAAMC,OAAO,GAAG;MACZC,EAAE,EAAEC,IAAI,CAACC,MAAM,CAAC,CAAC;MACjBC,IAAI,EAAET;IACV,CAAC;IAEDG,OAAO,CAAC,CAAC,GAAGD,IAAI,EAACG,OAAO,CAAC,CAAC,EAAC;IAC1BJ,YAAY,CAAC,EAAE,CAAC,EAAC;EACtB,CAAC;;EAEA;EACA,MAAMS,iBAAiB,GAAIC,KAAK,IAAK;IAClCV,YAAY,CAACU,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,EAAC;EACrC,CAAC;;EAED,oBACIhB,OAAA;IAAKiB,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACxBlB,OAAA;MAAAkB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBtB,OAAA;MAAMiB,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC3BlB,OAAA,CAACJ,KAAK;QACNa,EAAE,EAAC,WAAW;QACdc,IAAI,EAAC,MAAM;QACXC,WAAW,EAAG,aAAa;QAC3BR,KAAK,EAAEb,SAAU;QACjBsB,QAAQ,EAAEZ;MAAkB;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B,CAAC,eAEFtB,OAAA,CAACH,MAAM;QACPY,EAAE,EAAC;QACH;QAAA;QACAQ,SAAS,EAAC,KAAK;QACfS,OAAO,EAAInB,aAAc;QAAAW,QAAA,EACxB;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC,eACPtB,OAAA;MAAAkB,QAAA,EACKb,IAAI,CAACsB,GAAG,CAAEf,IAAI,iBACXZ,OAAA;QAAIiB,SAAS,EAAC,MAAM;QAAAC,QAAA,EACfN,IAAI,CAACA;MAAI,GADYA,IAAI,CAACH,EAAE;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAE7B,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAACpB,EAAA,CAnDuBD,SAAS;AAAA2B,EAAA,GAAT3B,SAAS;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}